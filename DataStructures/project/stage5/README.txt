Stage 5 Assumptions - Eitan Kaszovitz

1) A. Undoing a put which previously memory managed docs to disc doesn’t bring back those memory managed docs into regular memory. B. Similarly, when docs are moved to disc due to memory management, they are not brought back to memory when DSI.deletedocument() is called on a document that forced them into memory. For example, lets say the maxDocCount is 2, and there are 4 docs; doc1 and doc2 are memory managed to disc, but deleting doc4 won’t bring one of them back into memory even though technically the current docCount in memory would only be 1 (doc3). I was under the impression that we wouldn’t need to account for these things. 

2) The whole file storage for undo/redo really confused me. My Lamda functions never contained actual references to documents, they just dealt with URIs. Therefore, I just left them as is and did not leave the documents as files when being kept for a potential undo, I just had my lamda’s deal with URIs. And even if the lamda’s had direct references to documents, I was really unclear as to how that would be solved. I understand that it’s possible to just keep the doc as a file and then have it converted to a doc at the end of the lambda function, but to me that still seems like the same issue - the function has a reference to a doc, albeit at the end of the function and albeit after being converted from a file. What’s the difference between having btree.get(URI)- a “direct” reference to the doc, and having file.toDoc()- which we’re now saying is not a reference to doc; both seem to reference the doc? Mima Nafshach- if the code reads the lamda function before undo is ever called, then having any sort of mention of a document anywhere in it should be a problem, and if the code doesn’t read the lamda function until undo is called, why can’t we just have a direct reference to a doc in there? I believe this was asked on Piazza, but I didn’t understand the answer. But either way, my functions only deal with URI’s, so I assume it isn’t a problem.

3) When a doc is on disc and it’s deleted, undoing that delete will put it back on disc. Similarly, if a doc on disc is “ejected” because of a put with the same URI, then undoing that put will return the “ejected” doc to disc.

4) If there’s an issue with deserializing - see comments in DocDeserializer.java

5) Anytime btree.get(uri) is called from DSI and it returns a json file, that json file is returned from disc to memory. 
